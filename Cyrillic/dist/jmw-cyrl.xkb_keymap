// Generated by kalamine on 2025-06-28
//
// This is a standalone XKB keymap file. To apply this keymap, use:
//   xkbcomp -w9 jmw-cyrl.xkb_keymap $DISPLAY
//
// DO NOT COPY THIS INTO xkb/symbols: THIS WOULD MESS UP YOUR XKB CONFIG.
//
// File          : jmw-cyrl.xkb_keymap
// Project page  : https://OneDeadKey.github.com/kalamine
// Author        : QualityCroissant
// Version       : 0.0.1
// License       : WTFPL - Do What The Fuck You Want Public License
//
// Cyrillic-script layout for the Jun Ma̋nwǫd language
//

xkb_keymap {
  xkb_keycodes      { include "evdev"    };
  xkb_types         { include "complete" };
  xkb_compatibility { include "complete" };

  // Base layer + dead key
  // ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
  // │ ¬   │ !   │ "   │ @   │ $   │ %   │ ^   │ &   │ *   │ (   │ )   │ _   │ +   ┃          ┃
  // │ '   │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ -   │ =   ┃ ⌫        ┃
  // ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
  // ┃        ┃ Ч   │ В   │ Е   │ Р   │ Т   │ Ї   │ У   │ И   │ О   │ П   │ {   │ }   ┃       ┃
  // ┃ ↹      ┃     │     │   є │     │     │     │   ю │   ї │   ё │     │ [   │ ]   ┃       ┃
  // ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
  // ┃         ┃ А   │ С   │ Д   │ Ф   │ Й   │ Х   │**   │ К   │ Л   │ :   │ ”   │ ~   ┃      ┃
  // ┃ ⇬       ┃   я │     │     │     │     │     │** й │     │     │ ;   │ „   │ #   ┃      ┃
  // ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
  // ┃      ┃ |   │ З   │ Ш   │ Ѫ   │ Ж   │ Б   │ Н   │ М   │ <   │ >   │ ?   ┃               ┃
  // ┃ ⇧    ┃ \   │     │     │   ѭ │     │     │     │     │ ,   │ .   │ /   ┃ ⇧             ┃
  // ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
  // ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
  // ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
  // ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

  // AltGr layer
  // ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
  // │     │     │     │     │     │     │     │     │     │     │     │     │     ┃          ┃
  // │   | │   ` │   № │     │     │     │     │     │     │     │     │     │     ┃ ⌫        ┃
  // ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┳━━━━━━━┫
  // ┃        ┃     │     │     │     │     │     │     │     │     │     │     │     ┃       ┃
  // ┃ ↹      ┃   q │   w │   e │   r │   t │   y │   u │   i │   o │   p │     │     ┃       ┃
  // ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓  ⏎   ┃
  // ┃         ┃     │     │     │     │     │     │     │     │     │     │     │     ┃      ┃
  // ┃ ⇬       ┃   a │   s │   d │   f │   g │   h │   j │   k │   l │     │     │     ┃      ┃
  // ┣━━━━━━┳━━┹──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┷━━━━━┻━━━━━━┫
  // ┃      ┃     │     │     │     │     │     │     │     │     │     │     ┃               ┃
  // ┃ ⇧    ┃     │   z │   x │   c │   v │   b │   n │   m │     │     │     ┃ ⇧             ┃
  // ┣━━━━━━┻┳━━━━┷━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
  // ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
  // ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
  // ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

  partial alphanumeric_keys modifier_keys
  xkb_symbols "cy" {
    include "pc"
    include "inet(evdev)"

    // The “OneDeadKey” is an ISO_Level3_Latch, i.e. a “dead AltGr” key.
    // This is the only way to have a multi-purpose dead key with XKB.

    // The real AltGr key should be an ISO_Level5_Switch; however,
    // ISO_Level5_Switch does not work as expected when applying this layout
    // with xkbcomp, so let’s use two groups instead and make the AltGr key a
    // group selector.

    name[group1]= "Cyrillic-script layout for the Jun Ma̋nwǫd language";
    name[group2]= "AltGr";

    key.type[group1] = "FOUR_LEVEL";
    key.type[group2] = "TWO_LEVEL";

    // Digits
    key <AE01> {[ 1               , exclam          , VoidSymbol      , VoidSymbol      ],[ grave           , VoidSymbol      ]}; // 1 !     `
    key <AE02> {[ 2               , quotedbl        , VoidSymbol      , VoidSymbol      ],[ U2116           , VoidSymbol      ]}; // 2 "     №
    key <AE03> {[ 3               , at              , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 3 @
    key <AE04> {[ 4               , dollar          , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 4 $
    key <AE05> {[ 5               , percent         , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 5 %
    key <AE06> {[ 6               , asciicircum     , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 6 ^
    key <AE07> {[ 7               , ampersand       , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 7 &
    key <AE08> {[ 8               , asterisk        , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 8 *
    key <AE09> {[ 9               , parenleft       , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 9 (
    key <AE10> {[ 0               , parenright      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // 0 )

    // Letters, first row
    key <AD01> {[ U0447           , U0427           , VoidSymbol      , VoidSymbol      ],[ q               , Q               ]}; // ч Ч     q Q
    key <AD02> {[ U0432           , U0412           , VoidSymbol      , VoidSymbol      ],[ w               , W               ]}; // в В     w W
    key <AD03> {[ U0435           , U0415           , U0454           , U0404           ],[ e               , E               ]}; // е Е є Є e E
    key <AD04> {[ U0440           , U0420           , VoidSymbol      , VoidSymbol      ],[ r               , R               ]}; // р Р     r R
    key <AD05> {[ U0442           , U0422           , VoidSymbol      , VoidSymbol      ],[ t               , T               ]}; // т Т     t T
    key <AD06> {[ U0457           , U0407           , VoidSymbol      , VoidSymbol      ],[ y               , Y               ]}; // ї Ї     y Y
    key <AD07> {[ U0443           , U0423           , U044E           , U042E           ],[ u               , U               ]}; // у У ю Ю u U
    key <AD08> {[ U0438           , U0418           , U0457           , U0407           ],[ i               , I               ]}; // и И ї Ї i I
    key <AD09> {[ U043E           , U041E           , U0451           , U0401           ],[ o               , O               ]}; // о О ё Ё o O
    key <AD10> {[ U043F           , U041F           , VoidSymbol      , VoidSymbol      ],[ p               , P               ]}; // п П     p P

    // Letters, second row
    key <AC01> {[ U0430           , U0410           , U044F           , U042F           ],[ a               , A               ]}; // а А я Я a A
    key <AC02> {[ U0441           , U0421           , VoidSymbol      , VoidSymbol      ],[ s               , S               ]}; // с С     s S
    key <AC03> {[ U0434           , U0414           , VoidSymbol      , VoidSymbol      ],[ d               , D               ]}; // д Д     d D
    key <AC04> {[ U0444           , U0424           , VoidSymbol      , VoidSymbol      ],[ f               , F               ]}; // ф Ф     f F
    key <AC05> {[ U0439           , U0419           , VoidSymbol      , VoidSymbol      ],[ g               , G               ]}; // й Й     g G
    key <AC06> {[ U0445           , U0425           , VoidSymbol      , VoidSymbol      ],[ h               , H               ]}; // х Х     h H
    key <AC07> {[ ISO_Level3_Latch, ISO_Level3_Latch, U0439           , U0419           ],[ j               , J               ]}; // й й й Й j J
    key <AC08> {[ U043A           , U041A           , VoidSymbol      , VoidSymbol      ],[ k               , K               ]}; // к К     k K
    key <AC09> {[ U043B           , U041B           , VoidSymbol      , VoidSymbol      ],[ l               , L               ]}; // л Л     l L
    key <AC10> {[ semicolon       , colon           , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // ; :

    // Letters, third row
    key <AB01> {[ U0437           , U0417           , VoidSymbol      , VoidSymbol      ],[ z               , Z               ]}; // з З     z Z
    key <AB02> {[ U0448           , U0428           , VoidSymbol      , VoidSymbol      ],[ x               , X               ]}; // ш Ш     x X
    key <AB03> {[ U046B           , U046A           , U046D           , U046C           ],[ c               , C               ]}; // ѫ Ѫ ѭ Ѭ c C
    key <AB04> {[ U0436           , U0416           , VoidSymbol      , VoidSymbol      ],[ v               , V               ]}; // ж Ж     v V
    key <AB05> {[ U0431           , U0411           , VoidSymbol      , VoidSymbol      ],[ b               , B               ]}; // б Б     b B
    key <AB06> {[ U043D           , U041D           , VoidSymbol      , VoidSymbol      ],[ n               , N               ]}; // н Н     n N
    key <AB07> {[ U043C           , U041C           , VoidSymbol      , VoidSymbol      ],[ m               , M               ]}; // м М     m M
    key <AB08> {[ comma           , less            , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // , <
    key <AB09> {[ period          , greater         , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // . >
    key <AB10> {[ slash           , question        , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // / ?

    // Pinky keys
    key <AE11> {[ minus           , underscore      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // - _
    key <AE12> {[ equal           , plus            , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // = +
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ bracketleft     , braceleft       , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // [ {
    key <AD12> {[ bracketright    , braceright      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // ] }
    key <AC11> {[ U201E           , U201D           , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // „ ”
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ apostrophe      , notsign         , VoidSymbol      , VoidSymbol      ],[ bar             , brokenbar       ]}; // ' ¬     | ¦
    key <BKSL> {[ numbersign      , asciitilde      , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // # ~
    key <LSGT> {[ backslash       , bar             , VoidSymbol      , VoidSymbol      ],[ VoidSymbol      , VoidSymbol      ]}; // \ |

    // Space bar
    key <SPCE> {[ space           , U0301           , apostrophe      , apostrophe      ],[ space           , space           ]}; //   ́ ' '

    // AltGr
    // Note: the `ISO_Level5_Latch` here is meaningless but helps with Chromium.
    key <RALT> {
      type = "TWO_LEVEL",
      symbols = [ ISO_Level5_Latch, ISO_Level5_Latch ],
      actions = [ SetGroup(group=2), SetGroup(group=2) ]
    };
  };
};
// vim: ft=xkb:fdm=indent:ts=2:nowrap
